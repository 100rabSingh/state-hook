UseReducer
=> useReducer is a hook that is used for state management
=> useReducer is an alternative to useState
=> Difference - useState is built using useReducer
    => useReducer is more premittive hook compared to useState

Reduce
# reduce in JavaScript
# array.reduce(reducer, initialValue)
# singleValue = reducer(accumulator, itemValue)
# Reduce method returns a single itemValue
vs
useReducer
# useReducer in React
# useReducer(reducer, initialState)
# newState = reducer(currentState, action)
# useReducer returns a pair of values. [newState, dispatch]

If both useState and useReducer is for state management when should we use which one?
 => useState
 # Type of State : Number, String, Boolean
 # Number of State Transitions : one or two
 # Related State Transitions? : No
 # Business Logic : No Business Logic
 # Local vs Global : Local

 vs
 
 => useReducer
 # Type of State : oject or array
 # Number of State Transitions : Too Many
 # Related State Transitions? : Yes
 # Business Logic : Complex Business Logic
 # Local vs Global : Global


